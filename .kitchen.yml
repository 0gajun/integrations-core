---
driver_plugin: vagrant

provisioner:
  name: chef_zero
  client_rb:
    ssl_verify_mode: :verify_none # Chef outputs an ugly SSL warning otherwise

platforms:
<% %w(11.16.4 10.34.4 10.14.4).each do |chef_version| %>
- name: ubuntu-12.04-<%= chef_version %>
  driver_config:
    box: opscode-ubuntu-12.04
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_provisionerless.box
    require_chef_omnibus: <%= chef_version %>
  run_list:
  - recipe[apt]
- name: ubuntu-10.04-<%= chef_version %>
  driver_config:
    box: opscode-ubuntu-10.04
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-10.04_provisionerless.box
    require_chef_omnibus: <%= chef_version %>
  run_list:
  - recipe[apt]
- name: centos-6.5-<%= chef_version %>
  driver_config:
    box: opscode-centos-6.5
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_centos-6.5_provisionerless.box
    require_chef_omnibus: <%= chef_version %>
  run_list:
  - recipe[yum::epel]
- name: centos-5.10-<%= chef_version %>
  driver_config:
    box: opscode-centos-5.10
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_centos-5.10_provisionerless.box
    require_chef_omnibus: <%= chef_version %>
  run_list:
  - recipe[yum::epel]
- name: debian-7.4.0-<%= chef_version %>
  driver_config:
    box: opscode-debian-7.4.0
    box_url: https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_debian-7.4.0_provisionerless.box
    require_chef_omnibus: <%= chef_version %>
  run_list:
  - recipe[apt]
<% end %>

suites:
# - name: default
#   run_list: ["recipe[datadog::default]"]
#   attributes: {}
#   # This should actually do nothing.
#   # There is a sanity.bats test to simply verify that /tmp exists.

- name: dd-agent
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::dd-agent]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil

- name: dd-agent-haproxy
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::haproxy]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil
      haproxy:
        instances:
          - username: admin
            password: sekret
            url: http://localhost:22002/status
            status_check: false
            collect_aggregates_only: true
            collect_status_metrics: true

- name: dd-agent-jmx
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::jmx]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil
      jmx:
        instances:
          - server: localhost
            port: 9999
            extra_key: extra_val
            include:
              - domain: domain0
              - domain: domain1
            exclude: []

- name: dd-agent-mongo
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::mongo]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil
      mongo:
        instances:
          - host: localhost
            port: 27017

- name: dd-agent-kafka
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::kafka]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil
      kafka:
        instances:
          - host: localhost
            port: 9999
            name: my_kafka
            user: username
            password: password
            java_bin_path: /path/to/java
            trust_store_path: /path/to/trustStore.jks
            trust_store_password: password

- name: dd-agent-kafka-consumer
  run_list:
    - recipe[datadog::dd-handler]
    - recipe[datadog::kafka_consumer]
  attributes:
    datadog:
      api_key: somethingnotnil
      application_key: alsonotnil
      kafka_consumer:
        instances:
          - kafka_connect_str: localhost:19092
            zk_connect_str: localhost:2181
            zk_prefix: /0.8
            consumer_groups:
              my_consumer:
                my_topic: [0, 1, 4, 12]

parameters:
  sys_platform: ''

steps:
# Install the Python version with which to use globally last as
# these tasks prepend to PATH instead of appending to it. See:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/use-python-version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '2.7'
  displayName: 'Use Python 2.7'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
  displayName: 'Use Python 3.8'

- bash: |
    set -e
    echo Compile Deps - Hello ${{ parameters.sys_platform }}
    python --version
    python2 --version
    python --version  # python3
    where python
    ls -la

    cat datadog_checks_base/datadog_checks/base/data/agent_requirements.in | grep -v pymqi > /tmp/agent_requirements_filtered.in

    pip2 install pip-tools
    pip3 install pip-tools

    python2 -m piptools compile --generate-hashes --output-file agent_requirements-${{ parameters.sys_platform }}-py2.txt /tmp/agent_requirements_filtered.in

    # python3
    python -m piptools compile --generate-hashes --output-file agent_requirements-${{ parameters.sys_platform }}-py3.txt /tmp/agent_requirements_filtered.in

    cp agent_requirements-${{ parameters.sys_platform }}-py2.txt $BUILD_ARTIFACTSTAGINGDIRECTORY/
    cp agent_requirements-${{ parameters.sys_platform }}-py3.txt $BUILD_ARTIFACTSTAGINGDIRECTORY/
    ls -la
    ls -la $BUILD_ARTIFACTSTAGINGDIRECTORY

  displayName: 'Compile Deps'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
